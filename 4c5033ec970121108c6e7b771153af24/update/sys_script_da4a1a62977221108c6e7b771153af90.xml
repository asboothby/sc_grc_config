<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sn_grc_issue</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sn_grc_issue">responseCHANGESTO1^responseCHANGESFROM^EQ<item display_value="Remediate" endquery="false" field="response" goto="false" newquery="false" operator="CHANGESTO" or="false" value="1"/>
            <item display_value="-- None --" endquery="false" field="response" goto="false" newquery="false" operator="CHANGESFROM" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Create Initial Remediation Task</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	//Verify no remediation tasks exist for this issue
	var remTaskCount = 0;
	var gaRemTask = new GlideAggregate('sn_grc_task');
	gaRemTask.addQuery('issue', current.sys_id);
	gaRemTask.addAggregate('COUNT');
	gaRemTask.query();
	while(gaRemTask.next())
	{
		remTaskCount = gaRemTask.getAggregate('COUNT');
	}
	gs.addInfoMessage('remTaskCount: ' + remTaskCount);
	if(remTaskCount < 1)
	{
		// Create remediation task and associate with this issue
		var grRemTask = new GlideRecord('sn_grc_task');
		grRemTask.newRecord();
		grRemTask.issue=current.sys_id;
		grRemTask.short_description = current.profile.getDisplayValue() + ' - ' + current.item.getDisplayValue();
		grRemTask.description = 'See the Action Plan on the parent issue for details';
		grRemTask.assigned_to = current.assigned_to;
		grRemTask.start_date = current.start_date;
		grRemTask.duration = current.duration;
		grRemTask.insert();	
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-05-17 11:06:27</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>da4a1a62977221108c6e7b771153af90</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Create Initial Remediation Task</sys_name>
        <sys_overrides/>
        <sys_package display_value="SC GRC Config" source="x_631631_sc_grc_co">4c5033ec970121108c6e7b771153af24</sys_package>
        <sys_policy/>
        <sys_scope display_value="SC GRC Config">4c5033ec970121108c6e7b771153af24</sys_scope>
        <sys_update_name>sys_script_da4a1a62977221108c6e7b771153af90</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-08 09:56:11</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=da4a1a62977221108c6e7b771153af90"/>
</record_update>
